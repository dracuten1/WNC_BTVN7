{"version":3,"sources":["hoc/Layout/Layout.jsx","contexts/square-context.js","components/game-square/square.jsx","components/game-board/board.jsx","components/history-board/history-board.jsx","containers/GameCaro/GameCaro.jsx","store/actions/gameActions.js","store/actions/actionTypes.js","axios-backend.js","store/actions/authenticaActions.js","containers/Auth/login/login.jsx","containers/Auth/register/register.jsx","containers/Auth/Auth.jsx","containers/Menu/Menu.jsx","App.js","serviceWorker.js","utility/squareObj.js","utility/gameChecker.js","store/utility.js","store/reducers/gameReducers.js","store/reducers/authenticaReducer.js","store/reducers/onlineState.js","index.js"],"names":["layout","props","children","className","squareContext","React","createContext","onSquareClick","square","value","Square","state","this","isSelected","squareObj","style","mark","Consumer","context","type","onClick","Component","Board","renderSquare","key","renderRow","squareRow","map","squares","historyBoard","arr","arrange","i","step","current","backToStep","GameCaro","init","initGameRefactor","handleClick","selectedSquare","machineSelect","setStep","render","arrangeAsend","boardSquares","player","win","history","currentStep","authRedirect","isAuthenticated","console","log","to","Provider","setState","length","connect","grc","auth","dispatch","payLoads","payLoadsdata","instance","axios","create","baseURL","logout","localStorage","removeItem","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","SignIn","classes","username","password","onLogin","switchElement","Container","component","maxWidth","CssBaseline","Avatar","Typography","variant","noValidate","TextField","error","required","fullWidth","id","label","name","onChange","event","changed","autoFocus","autoComplete","Button","color","Grid","container","item","Link","appId","autoLoad","fields","callback","response","onFacebookCallback","clientId","buttonText","onSuccess","onFailure","Copyright","align","href","Date","getFullYear","onRegister","Box","mt","Auth","inputChangedHandler","controlName","user","target","userLogin","preventDefault","userRegister","e","onGoogleLogin","googleLoginPress","onFacebookLogin","onFbCallback","isRegister","authRedirectPath","element","errMsg","inputType","post","then","res","data","err","payload","setItem","token","login","register","options","method","Blob","JSON","stringify","access_token","accessToken","cache","fetch","r","json","googleLogin","facebookLogin","Menu","redirect","path","gameRedirect","button","input","App","hello","Boolean","window","location","hostname","match","SquareValue","j","equal","orther","isSameValue","isComponentValue","Checker","check","squareValue","checkSubDiagonal","checkCol","checkRow","checkMainDiagonal","twoHeadBlock","count","x","y","updateObject","oldObj","updatedValues","getBlankBoard","Array","fill","initialState","findSquare","squaresBoard","reducer","action","counter","newState","squareM","s","select","result","newBoard","sr1","square1","sq","forEach","newHis","slice","newBoardHistory","lo","boardRow","newSquare","getItem","jwtToken","msg","turn","rootReducer","combineReducers","gameReducer","authenticaReducer","onl","onlienReduce","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a83bed09.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Layout.css';\r\n\r\nconst layout = props => {\r\n    const { children } = props;\r\n    return (<div className='layout'>\r\n        {children}\r\n    </div>)\r\n}\r\nexport default layout;","import React from 'react';\r\n\r\nconst squareContext = React.createContext({\r\n    // eslint-disable-next-line no-unused-vars\r\n    onSquareClick: (square) => { },\r\n    value: null\r\n});\r\n\r\nexport default squareContext;","import React from 'react';\r\nimport './square.css';\r\nimport SquareContext from '../../contexts/square-context';\r\n\r\nclass Square extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.value)\r\n        // console.log(this.props.squareObj);\r\n        const { value, isSelected, squareObj } = this.props;\r\n        const style = isSelected ? {\r\n            'backgroundColor': 'green'\r\n        } : null;\r\n        let mark = '';\r\n        if (value === 1) {\r\n            mark = 'X';\r\n        } else if (value === 2) {\r\n            mark = 'O';\r\n        }\r\n\r\n        return (\r\n            <SquareContext.Consumer>\r\n                {context =>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"square\"\r\n                        style={style}\r\n                        onClick={() => context.onSquareClick(squareObj)}\r\n                    >\r\n                        {mark}\r\n                    </button>\r\n                }\r\n            </SquareContext.Consumer>\r\n        );\r\n    }\r\n}\r\nexport default Square;","import React from 'react';\r\nimport Square from '../game-square/square';\r\nimport './board.css';\r\n\r\n\r\nclass Board extends React.Component {\r\n\r\n    renderSquare = (square) => {\r\n        return <Square\r\n            isSelected={square.isSelected}\r\n            squareObj={square}\r\n            value={square.value} key={square.key}\r\n        />;\r\n    }\r\n\r\n    renderRow = (squareRow) => {\r\n        return (\r\n            <div className='board-row' key={`row${squareRow[0].key}`}>\r\n                <div>\r\n                    {squareRow.map(square => this.renderSquare(square))}\r\n                </div>\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { squares } = this.props;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {squares.map(squareRow => this.renderRow(squareRow))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Board;","import React from 'react';\r\nimport './history-board.css';\r\n\r\nconst historyBoard = props => {\r\n    let arr = [];\r\n    if (!props.arrange) {\r\n        for (let i = props.step; i >= 0; i -= 1) {\r\n            if (i % 2 == 0)\r\n                arr = [...arr, i];\r\n        }\r\n    } else {\r\n        for (let i = 0; i <= props.step; i += 1) {\r\n            if (i % 2 == 0)\r\n                arr = [...arr, i];\r\n        }\r\n    }\r\n\r\n    // console.log(arr);\r\n    return arr.map((step) => {\r\n        const style = props.current === step ? {\r\n            'backgroundColor': 'green'\r\n        } : null;\r\n        return <li key={step}>\r\n            <button className=\"button\" type=\"button\" style={style} onClick={() => props.backToStep(step)}>Jump to {step/2}</button>\r\n        </li>\r\n    }\r\n    )\r\n}\r\n\r\nexport default historyBoard;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Board from '../../components/game-board/board';\r\nimport SquareContext from '../../contexts/square-context';\r\nimport HistoryBoard from '../../components/history-board/history-board';\r\nimport * as actionCreators from '../../store/actions/gameActions';\r\n\r\nimport './GameCaro.css';\r\n\r\nclass GameCaro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrangeAsend: true,\r\n        }\r\n    }\r\n\r\n    init = () => {\r\n        // const boardSquares = this.getBlankBoard();\r\n        // console.log(boardSquares);\r\n        // eslint-disable-next-line react/destructuring-assignment\r\n        this.props.initGameRefactor();\r\n\r\n        // this.setState({\r\n        //     boardSquares,\r\n        //     player: 1,\r\n        //     win: false,\r\n        //     history: []\r\n        // });\r\n    }\r\n\r\n    handleClick = (square) => {\r\n        // const { boardSquares } = this.state;\r\n        // const squaresBoard = boardSquares.map((squareRow) => {\r\n        //     squareRow.map(squareM => {\r\n        //         const s = squareM;\r\n        //         s.isSelected = false;\r\n        //         if (squareM.equal(square)) {\r\n        //             // console.log('map', squareM);\r\n        //             if (s.value === 0) {\r\n        //                 const { player, currentStep, history } = this.state;\r\n        //                 s.value = player;\r\n        //                 s.select();\r\n        //                 this.checkWin(s);\r\n        //                 let newHis = [];\r\n        //                 if (currentStep < history.length) {\r\n        //                     newHis = history.slice(0, currentStep)\r\n        //                 } else {\r\n        //                     newHis = [...history]\r\n        //                 }\r\n        //                 this.setState({\r\n        //                     history: [...newHis, {\r\n        //                         location: square.key,\r\n        //                         player\r\n        //                     }],\r\n        //                     player: player === 1 ? 2 : 1,\r\n        //                     currentStep: currentStep + 1,\r\n        //                 });\r\n        //                 // console.log('player', this.state.player)\r\n        //             }\r\n        //         }\r\n        //         return s;\r\n        //     })\r\n        //     return squareRow;\r\n        // })\r\n\r\n        // this.setState({ boardSquares: squaresBoard });\r\n        // eslint-disable-next-line react/destructuring-assignment\r\n        this.props.selectedSquare(square);\r\n        this.props.machineSelect();\r\n        \r\n    }\r\n\r\n    backToStep = (step) => {\r\n        this.props.setStep(step);\r\n    }\r\n    render = () => {\r\n        const { arrangeAsend } = this.state;\r\n        const { boardSquares, player, win, history, currentStep } = this.props;\r\n        let authRedirect = null;\r\n        if (!this.props.isAuthenticated) {\r\n            console.log(this.props);\r\n            authRedirect = <Redirect to={'/'} />\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                {authRedirect}\r\n                {win ? <div>\r\n                    <h1>Congratulation Player {player === 1 ? 'O' : 'X'}</h1>\r\n                </div>\r\n                    : null\r\n                }\r\n                <div>\r\n                    <div className=\"board\">\r\n                        <h1>{player === 1 ? 'X' : 'O'}</h1>\r\n                        <button type=\"button\" onClick={this.init}>Play again</button>\r\n                    </div>\r\n\r\n                    <SquareContext.Provider value={\r\n                        {\r\n                            value: 1,\r\n                            onSquareClick: (square) => this.handleClick(square)\r\n                        }\r\n                    }>\r\n                        <Board squares={boardSquares}\r\n                            win={win}\r\n                        />\r\n                    </SquareContext.Provider>\r\n                </div>\r\n                <ol>\r\n                    <li>\r\n                        <button type=\"button\" onClick={() => this.setState({ arrangeAsend: true })}> Ascending </button>\r\n                        <button type=\"button\" onClick={() => this.setState({ arrangeAsend: false })}> Descending </button>\r\n                    </li>\r\n                    {\r\n                        win === false ?\r\n                            <ol>\r\n                                <HistoryBoard current={currentStep} step={history.length} arrange={arrangeAsend} backToStep={(step) => this.backToStep(step)} />\r\n                            </ol> : null\r\n                    }\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boardSquares: state.grc.boardSquares,\r\n        player: state.grc.player,\r\n        win: state.grc.win,\r\n        history: state.grc.history,\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        initGameRefactor: () => dispatch(actionCreators.initGame()),\r\n        selectedSquare: (square) => dispatch(actionCreators.sqaureSelected(square)),\r\n        machineSelect: () => dispatch(actionCreators.machineChose()),\r\n        setStep: (step) => dispatch(actionCreators.setStep(step)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameCaro);","import * as ActionTypes from './actionTypes';\r\n\r\nexport const sqaureSelected = (payLoadsData) => {\r\n    return {\r\n        type: ActionTypes.CHOSE_POSITION,\r\n        square: payLoadsData,\r\n    };\r\n};\r\n\r\nexport const machineChose = () => {\r\n    return {\r\n        type: ActionTypes.MACHINE_CHOSE,\r\n    };\r\n};\r\nexport const initGame = (payLoadsdata) => {\r\n    return {\r\n        type: ActionTypes.INIT_GAME,\r\n        payLoads: payLoadsdata\r\n    };\r\n};\r\nexport const setStep = (data) => {\r\n    return {\r\n        type: ActionTypes.SET_STEP,\r\n        step:data\r\n    };\r\n};","\r\nexport const CHECK_WIN = \"CHECKWIN\";\r\nexport const CHOSE_POSITION = \"CHOSEPOSITION\";\r\nexport const INIT_GAME = \"INIT\";\r\nexport const ADD_HISTORY = \"ADD_HISTORY\";\r\nexport const SET_STEP = \"SET_STEP\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const REGISTER = \"REGISTER\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const ERROR = \"ERROR\";\r\n\r\nexport const FIND_OPPONENT = \"FIND_OPPONENT\";\r\nexport const UNDO_COMMAND ='UNDO_COMMAND';\r\nexport const ACCEPT_UNDO_COMMAND ='ACCEPT_UNDO_COMMAND';\r\nexport const DRAW_COMMAND ='DRAW_COMMAND';\r\nexport const ACCEPT_DRAW_COMMAND ='ACCEPT_DRAW_COMMAND';\r\nexport const MACHINE_CHOSE=\"MACHINE_CHOSE\"","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    //baseURL: 'http://ec2-13-250-157-230.ap-southeast-1.compute.amazonaws.com:8626'\r\n    baseURL: 'http://localhost:8626'\r\n});\r\n\r\nexport default instance;","import * as ActionType from './actionTypes';\r\nimport axios from '../../axios-backend';\r\n\r\nexport const register = (user) => {\r\n    return (dispatch) => {\r\n        axios.post('/auth/register', user).then(res => {\r\n            localStorage.setItem('token', res.data.token);\r\n            localStorage.setItem('username', user.id);\r\n            dispatch({\r\n                type: ActionType.REGISTER,\r\n                payload: res.data\r\n            });\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (user) => {\r\n    return (dispatch) => {\r\n        axios.post('/auth/login', user).then(res => {\r\n            if (res.data.err) {\r\n                dispatch({\r\n                    type: ActionType.ERROR,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                localStorage.setItem('token', res.data.token);\r\n                localStorage.setItem('username', res.data.user.id);\r\n                dispatch({\r\n                    type: ActionType.LOGIN,\r\n                    payload: res.data\r\n                });\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const googleLogin = (response) => {\r\n    console.log('Hello');\r\n    console.log(response);\r\n    const tokenBlob = new Blob([JSON.stringify({ access_token: response.accessToken }, null, 2)], { type: 'application/json' });\r\n    const options = {\r\n        method: 'POST',\r\n        body: tokenBlob,\r\n        cache: 'default'\r\n    };\r\n    return (dispatch) => {\r\n        fetch('/auth/google', options).then(r => {\r\n            r.json().then(data => {   \r\n                console.log(data);\r\n                localStorage.setItem('token', data.token);\r\n                localStorage.setItem('username', data.id);             \r\n                dispatch({\r\n                    type: ActionType.LOGIN,\r\n                    payload: data\r\n                })\r\n            });\r\n        })\r\n    }\r\n};\r\nexport const facebookLogin = (response) => {\r\n    console.log('Hello');\r\n    console.log(response);\r\n    const tokenBlob = new Blob([JSON.stringify({access_token: response.accessToken}, null, 2)], {type : 'application/json'});\r\n    const options = {\r\n        method: 'POST',\r\n        body: tokenBlob,\r\n        cache: 'default'\r\n    };\r\n    return (dispatch) => {\r\n        fetch('/auth/facebook', options).then(r => {\r\n            r.json().then(data => {   \r\n                console.log(data);\r\n                localStorage.setItem('token', data.token);\r\n                localStorage.setItem('username', data.id);             \r\n                dispatch({\r\n                    type: ActionType.LOGIN,\r\n                    payload: data\r\n                })\r\n            });\r\n        })\r\n    }\r\n};\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('username');\r\n        dispatch({\r\n            type: ActionType.LOGOUT\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n    const classes = useStyles();\r\n    const { username, password, onLogin, switchElement } = props;\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Đăng nhập\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        error={props.error}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Tên đăng nhập\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={(event) => props.changed(event, \"username\")}\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        error={props.error}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Mật khẩu\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => props.changed(event, \"password\")}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        onClick={onLogin}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Đăng nhập\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item onClick={switchElement}>\r\n                            <Link onClick={switchElement}>\r\n                                Chưa có tài khoản? Đăng ký\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <FacebookLogin\r\n                        appId=\"481186559372148\"\r\n                        autoLoad={false}\r\n                        fields=\"name,email,picture\"\r\n                        callback={(response)=>props.onFacebookCallback(response)} />\r\n                <GoogleLogin\r\n                clientId=\"690822563928-r8kplbgfdmtbe7a362b7jrfd0bhuhk40.apps.googleusercontent.com\"\r\n                buttonText=\"Login\"\r\n                onSuccess={(response)=>props.onSuccess(response)}\r\n                onFailure={props.onFailure}\r\n            />\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n    const classes = useStyles();\r\n    const { username, password, onRegister, switchElement } = props;\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Đăng kí\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Tên đăng nhập\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={(event) => props.changed(event, \"username\")}\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Mật khẩu\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => props.changed(event, \"password\")}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        onClick={onRegister}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Đăng kí\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link onClick={switchElement} variant=\"body2\">\r\n                                {\"Đăng nhập\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login, logout, register, googleLogin, facebookLogin } from '../../store/actions/authenticaActions';\r\nimport Login from './login/login';\r\nimport Register from './register/register';\r\n\r\nclass Auth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            isRegister: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n    }\r\n    inputChangedHandler = (event, controlName) => {\r\n        const user = {\r\n            ...this.state.user,\r\n            [controlName]: event.target.value\r\n        }\r\n        this.setState({ user });\r\n    }\r\n    userLogin = event => {\r\n        event.preventDefault();\r\n        this.props.onLogin(this.state.user);\r\n    }\r\n    userRegister = event => {\r\n        event.preventDefault();\r\n        this.props.onRegister(this.state.user);\r\n    }\r\n    onFailure = e => {\r\n        console.log(e);\r\n    }\r\n    onGoogleLogin = response => {\r\n        console.log(response);\r\n        this.props.googleLoginPress(response);\r\n    }\r\n    onFacebookLogin = response => {\r\n        console.log(response);\r\n        this.props.onFbCallback(response);\r\n    }\r\n    render() {\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            console.log(this.props);\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n        const { user, isRegister } = this.state;\r\n        let element = null;\r\n        if (isRegister) {\r\n            element = <Register user={user}\r\n                error={this.props.error}\r\n                errMsg={this.props.errMsg}\r\n                onRegister={(event) => this.userRegister(event)}\r\n                changed={(event, inputType) => this.inputChangedHandler(event, inputType)}\r\n                switchElement={() => this.setState({ isRegister: false })}\r\n            />\r\n        } else {\r\n            element = <Login user={user}\r\n                error={this.props.error}\r\n                errMsg={this.props.errMsg}\r\n                onLogin={(event) => this.userLogin(event)}\r\n                changed={(event, inputType) => this.inputChangedHandler(event, inputType)}\r\n                switchElement={() => this.setState({ isRegister: true })}\r\n                onSuccess={(response) => this.onGoogleLogin(response)}\r\n                onFailure={this.props.onFailure}\r\n                onFacebookCallback={(response) => this.onFacebookLogin(response)}\r\n            />\r\n        }\r\n        return (<>\r\n            {authRedirect}\r\n\r\n            {element}\r\n\r\n        </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        authRedirectPath: state.auth.authRedirectPath,\r\n        error: state.auth.error,\r\n        errMsg: state.auth.errMsg,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogin: (user) => dispatch(login(user)),\r\n        onRegister: (user) => dispatch(register(user)),\r\n        logout: (user) => dispatch(logout(user)),\r\n        googleLoginPress: (response) => dispatch(googleLogin(response)),\r\n        onFbCallback: (response) => dispatch(facebookLogin(response))\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { logout } from '../../store/actions/authenticaActions';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            path: '/'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        let authRedirect = null;\r\n        if (!this.props.isAuthenticated) {\r\n            console.log(this.props);\r\n            authRedirect = <Redirect to=\"/\" />;\r\n        }\r\n        let gameRedirect = null;\r\n        if (this.state.redirect) {\r\n            gameRedirect = <Redirect to={this.state.path} />;\r\n        }\r\n        const classes = makeStyles(theme => ({\r\n            button: {\r\n                margin: theme.spacing(1),\r\n            },\r\n            input: {\r\n                display: 'none',\r\n            },\r\n        }));\r\n        return (<>\r\n            {authRedirect}\r\n            {gameRedirect}\r\n            <Button variant=\"contained\" className={classes.button} onClick={() => this.setState({ path: 'online', redirect: true })}>\r\n                Chơi online\r\n      </Button>\r\n            <Button variant=\"contained\" className={classes.button} onClick={() => this.setState({ path: 'offline', redirect: true })}>\r\n                Chơi với máy\r\n      </Button> \r\n            <Button variant=\"contained\" className={classes.button} onClick={this.props.logout}>\r\n                Đăng xuất\r\n      </Button>\r\n        </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        authRedirectPath: state.auth.authRedirectPath,\r\n        error: state.auth.error,\r\n        errMsg: state.auth.errMsg,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: (user) => dispatch(logout(user)),\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React, { Component } from 'react';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport GameCaro from './containers/GameCaro/GameCaro';\r\n// import User from './containers/User/user';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Menu from './containers/Menu/Menu';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  hello = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Switch>\r\n          <Route path=\"/offline\" component={GameCaro} />\r\n          <Route path=\"/menu\" component={Menu} />\r\n          <Route path=\"/\" component={Auth} />\r\n        </Switch>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","class SquareValue {\r\n    value = 0;\r\n\r\n    key = 0;\r\n\r\n    i = 0;\r\n\r\n    j = 0;\r\n\r\n    isSelected=false;\r\n\r\n    constructor(value, key, i, j) {\r\n        this.value = value;\r\n        this.key = key;\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n\r\n    select(){\r\n        this.isSelected=true;\r\n    }\r\n\r\n    equal = (orther) => {\r\n        if (orther.key === this.key) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isSameValue = (orther) => {\r\n        if (orther.value === this.value) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    isComponentValue = (orther) => {\r\n        if (orther.value !== this.value && orther.value !== 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport default SquareValue;","\r\nclass Checker {\r\n    static check = (squareValue, squares) => {\r\n        if (this.checkSubDiagonal(squareValue, squares).length > 0) {\r\n            return this.checkSubDiagonal(squareValue, squares)\r\n        }\r\n        if (this.checkCol(squareValue, squares).length > 0) {\r\n            return this.checkCol(squareValue, squares)\r\n        }\r\n        if (this.checkRow(squareValue, squares).length > 0) {\r\n            return this.checkRow(squareValue, squares)\r\n        }\r\n        if (this.checkMainDiagonal(squareValue, squares).length > 0) {\r\n            return this.checkMainDiagonal(squareValue, squares)\r\n        }\r\n        return [];\r\n    }\r\n\r\n    static checkCol = (squareValue, squares) => {\r\n        // console.log('Square value', squareValue);\r\n        let twoHeadBlock = false;\r\n        let count = 1;\r\n        let x = squareValue.i + 1;\r\n        let arr = [];\r\n        while (x < 20) {\r\n            if (squareValue.isSameValue(squares[x][squareValue.j])) {\r\n                count+=1;\r\n                x+=1;\r\n                arr = [...arr, squares[x][squareValue.j]]\r\n            } else {\r\n                // console.log(squares[x][squareValue.j].value);\r\n                if (squares[x][squareValue.j].value !== 0) {\r\n                    twoHeadBlock = true;\r\n                    // console.log('Block 1');\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        x = squareValue.i - 1;\r\n        while (x >= 0) {\r\n            const value = squares[x][squareValue.j];\r\n            if (squareValue.isSameValue(value)) {\r\n                count+=1;\r\n                x-=1;\r\n                arr = [...arr, value]\r\n            } else {\r\n                // console.log(squares[x][squareValue.j].value);\r\n                if (value.value !== 0) {\r\n                    twoHeadBlock = twoHeadBlock && true;\r\n                    // console.log('Block 1');\r\n                } else {\r\n                    twoHeadBlock = false;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // console.log('Count col', count);\r\n        return (count >= 5) && !twoHeadBlock ? arr : [];\r\n    }\r\n\r\n    static checkRow = (squareValue, squares) => {\r\n        // console.log('Square value', squareValue);\r\n        let twoHeadBlock = false;\r\n        let count = 1;\r\n        let x = squareValue.j + 1;\r\n        let arr = [];\r\n        while (x < 20) {\r\n\r\n            const value = squares[squareValue.i][x];\r\n            if (squareValue.isSameValue(value)) {\r\n                count+=1;\r\n                x+=1;\r\n                arr = [...arr, value]\r\n            } else {\r\n                // console.log(value);\r\n                if (value.value !== 0) {\r\n                    twoHeadBlock = true;\r\n                    // console.log('Block 1');\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        x = squareValue.j - 1;\r\n        while (x >= 0) {\r\n\r\n\r\n            const value = squares[squareValue.i][x];\r\n            if (squareValue.isSameValue(value)) {\r\n                count+=1;\r\n                x-=1;\r\n                arr = [...arr, value]\r\n            } else {\r\n                // console.log(value);\r\n                if (value.value !== 0) {\r\n                    twoHeadBlock = twoHeadBlock && true;\r\n                    // console.log('Block 1');\r\n                } else {\r\n                    twoHeadBlock = false;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        // console.log('Count row', count);\r\n        return (count >= 5) && !twoHeadBlock ? arr : [];\r\n    }\r\n\r\n    static checkMainDiagonal = (squareValue, squares) => {\r\n        let twoHeadBlock = false;\r\n        let count = 1;\r\n        let x = squareValue.i + 1;\r\n        let y = squareValue.j + 1;\r\n        let arr = [];\r\n        while (x < 20 && y < 20) {\r\n\r\n            const value = squares[x][y];\r\n            if (squareValue.isSameValue(value)) {\r\n                count += 1;\r\n                x+=1;\r\n                y+=1;\r\n                arr = [...arr, value];\r\n            } else {\r\n                // console.log(value);\r\n                if (value.value !== 0) {\r\n                    twoHeadBlock = true;\r\n                    // console.log('Block 1');\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        x = squareValue.i - 1;\r\n        y = squareValue.j - 1;\r\n        while (x >= 0 && y >= 0) {\r\n\r\n            const value = squares[x][y];\r\n            if (squareValue.isSameValue(value)) {\r\n                count += 1;\r\n                x-=1;\r\n                y-=1;\r\n                arr = [...arr, value];\r\n            } else {\r\n                // console.log(value);\r\n                if (value.value !== 0) {\r\n                    twoHeadBlock = twoHeadBlock && true;\r\n                    // console.log('Block 1');\r\n                } else {\r\n                    twoHeadBlock = false;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // console.log('Check Main Diagonal', count);\r\n\r\n        return (count >= 5) && !twoHeadBlock ? arr : [];\r\n    }\r\n\r\n    static checkSubDiagonal = (squareValue, squares) => {\r\n        let twoHeadBlock = false;\r\n        let count = 1;\r\n        let x = squareValue.i + 1;\r\n        let y = squareValue.j - 1;\r\n        let arr = [];\r\n        while (x < 20 && y >= 0) {\r\n            const value = squares[x][y];\r\n            if (squareValue.isSameValue(value)) {\r\n                count += 1;\r\n                x+=1;\r\n                y-=1;\r\n                arr = [...arr, value];\r\n            } else {\r\n                // console.log(value);\r\n                if (value.value !== 0) {\r\n                    twoHeadBlock = true;\r\n                    // console.log('Block 1');\r\n                } else {\r\n                    twoHeadBlock = false;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        x = squareValue.i - 1;\r\n        y = squareValue.j + 1;\r\n        while (x >= 0 && y < 20) {\r\n            const value = squares[x][y];\r\n            if (squareValue.isSameValue(value)) {\r\n                count += 1;\r\n                x-=1;\r\n                y+=1;\r\n                arr = [...arr, value];\r\n            } else {\r\n                // console.log(value);\r\n                if (value.value !== 0) {\r\n                    twoHeadBlock = twoHeadBlock && true;\r\n                    // console.log('Block 1');\r\n                } else {\r\n                    twoHeadBlock = false;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // console.log('Check Sub Diagonal', count);\r\n        // console.log('twoHeadBlock', twoHeadBlock);\r\n        return (count >= 5) && !twoHeadBlock ? arr : [];\r\n    }\r\n}\r\nexport default Checker;","const updateObject = (oldObj, updatedValues) => {\r\n    return {\r\n        ...oldObj,\r\n        ...updatedValues\r\n    }\r\n}\r\n\r\nexport default updateObject;","import * as actionTypes from '../actions/actionTypes';\r\nimport SquareValue from '../../utility/squareObj';\r\nimport Checker from '../../utility/gameChecker';\r\nimport updateObject from '../utility';\r\n\r\nconst getBlankBoard = () => {\r\n    const arr = new Array(20).fill(0);\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n        arr[i] = new Array(20);\r\n        for (let j = 0; j < arr[i].length; j += 1) {\r\n            arr[i][j] = new SquareValue(0, i * 10 * 2 + j, i, j);\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nconst initialState = {\r\n    boardSquares: getBlankBoard(),\r\n    player: 1,\r\n    win: false,\r\n    history: [],\r\n    currentStep: 0\r\n};\r\nconst findSquare = (squaresBoard) => {\r\n    for(let i =0; i< 20 ; i++){\r\n        for(let j=0; j<20; j++){\r\n            if(squaresBoard[i][j].value==0) return squaresBoard[i][j];\r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionTypes.ADD_HISTORY:\r\n            return updateObject(state, { counter: state.counter - 1 })\r\n        case actionTypes.CHOSE_POSITION: {\r\n            const { boardSquares } = state;\r\n            let newState = {};\r\n            \r\n            const { square } = action;\r\n            const squaresBoard = boardSquares.map((squareRow) => {\r\n                squareRow.map(squareM => {\r\n                    const s = squareM;\r\n                    s.isSelected = false;\r\n                    if (squareM.equal(square)) {\r\n                        // console.log('map', squareM);\r\n                        if (s.value === 0) {\r\n                            const { player, currentStep, history } = state;\r\n                            s.value = player;\r\n                            s.select();\r\n                            //\r\n                            const result = Checker.check(square, boardSquares);\r\n\r\n                            if (result.length > 0) {\r\n                                const newBoard = boardSquares.map(sr1 => {\r\n                                    sr1.map(square1 => {\r\n                                        const sq = square1;\r\n                                        sq.isSelected = false;\r\n                                        result.forEach(r => {\r\n                                            if (sq.equal(r)) {\r\n                                                sq.select();\r\n                                            }\r\n                                        })\r\n                                        return sq;\r\n                                    })\r\n                                    return sr1;\r\n\r\n                                })\r\n                                newState = {\r\n                                    win: true,\r\n                                    boardSquares: newBoard\r\n                                }\r\n                            }\r\n\r\n                            //\r\n                            let newHis = [];\r\n                            if (currentStep < history.length) {\r\n                                newHis = history.slice(0, currentStep)\r\n                            } else {\r\n                                newHis = [...history]\r\n                            }\r\n                            newState = {\r\n                                ...newState,\r\n                                history: [...newHis, {\r\n                                    location: square.key,\r\n                                    player\r\n                                }],\r\n                                player: 2,\r\n                                currentStep: currentStep + 1,\r\n                            }\r\n                        }\r\n                    }\r\n                    return s;\r\n                })\r\n                return squareRow;\r\n            })\r\n            return updateObject(state, { ...newState, boardSquares: squaresBoard });\r\n        }\r\n        case actionTypes.MACHINE_CHOSE: {\r\n            const { boardSquares } = state;\r\n            let newState = {};\r\n            const square = findSquare(boardSquares);\r\n            const squaresBoard = boardSquares.map((squareRow) => {\r\n                squareRow.map(squareM => {\r\n                    const s = squareM;\r\n                    s.isSelected = false;\r\n                    if (squareM.equal(square)) {\r\n                        // console.log('map', squareM);\r\n                        if (s.value === 0) {\r\n                            const { player, currentStep, history } = state;\r\n                            s.value = player;\r\n                            s.select();\r\n                            //\r\n                            const result = Checker.check(square, boardSquares);\r\n\r\n                            if (result.length > 0) {\r\n                                const newBoard = boardSquares.map(sr1 => {\r\n                                    sr1.map(square1 => {\r\n                                        const sq = square1;\r\n                                        sq.isSelected = false;\r\n                                        result.forEach(r => {\r\n                                            if (sq.equal(r)) {\r\n                                                sq.select();\r\n                                            }\r\n                                        })\r\n                                        return sq;\r\n                                    })\r\n                                    return sr1;\r\n\r\n                                })\r\n                                newState = {\r\n                                    win: true,\r\n                                    boardSquares: newBoard\r\n                                }\r\n                            }\r\n\r\n                            //\r\n                            let newHis = [];\r\n                            console.log(currentStep);\r\n                            if (currentStep < history.length) {\r\n                                newHis = history.slice(0, currentStep)\r\n                            } else {\r\n                                newHis = [...history]\r\n                            }\r\n                            console.log(newHis);\r\n                            newState = {\r\n                                ...newState,\r\n                                history: [...newHis, {\r\n                                    location: square.key,\r\n                                    player\r\n                                }],\r\n                                player: 1 ,\r\n                                currentStep: currentStep + 1,\r\n                            }\r\n                        }\r\n                    }\r\n                    return s;\r\n                })\r\n                return squareRow;\r\n            })\r\n            return updateObject(state, { ...newState, boardSquares: squaresBoard });\r\n        }\r\n        case actionTypes.INIT_GAME: {\r\n            const boardSquares = getBlankBoard();\r\n            return updateObject(state, {\r\n                boardSquares,\r\n                player: 1,\r\n                win: false,\r\n                history: [],\r\n                currentStep:0\r\n            });\r\n        }\r\n        case actionTypes.SET_STEP: {\r\n            // console.log('Set step');\r\n            const newBoardHistory = getBlankBoard();\r\n            const { history } = state;\r\n            for (let i = 0; i < action.step; i += 1) {\r\n                const lo = history[i].location;\r\n                newBoardHistory.map(boardRow => {\r\n                    boardRow.map(square => {\r\n                        const newSquare = square;\r\n                        newSquare.isSelected = false;\r\n                        if (newSquare.key === lo) {\r\n                            newSquare.value = history[i].player;\r\n                            newSquare.select();\r\n                        }\r\n                        return newSquare;\r\n                    })\r\n                    return boardRow;\r\n                })\r\n            }\r\n            let player = 1;\r\n            if (action.step !== 0) {\r\n                player = history[action.step - 1].player === 1 ? 2 : 1;\r\n            }\r\n            return updateObject(state, {\r\n                boardSquares: newBoardHistory,\r\n                player,\r\n                currentStep: action.step\r\n            });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as ActionTypes from '../actions/actionTypes';\r\nimport updateObject from '../utility';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false || localStorage.getItem('token'),\r\n    username: localStorage.getItem('username'),\r\n    jwtToken: localStorage.getItem('token'),\r\n    authRedirectPath: '/menu',\r\n    error:false,\r\n    errMsg:'',\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN: {\r\n            const { username, token } = action.payload;\r\n            const newState = {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                username,\r\n                jwtToken: token,\r\n            }\r\n            return newState;\r\n        }\r\n        case ActionTypes.REGISTER: {\r\n            const { username, token } = action.payload;\r\n            const newState = {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                username,\r\n                jwtToken: token,\r\n            }\r\n            return newState;\r\n        } case ActionTypes.LOGOUT: {\r\n            const newState = {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                jwtToken: null,\r\n            }\r\n            return newState;\r\n        } case ActionTypes.ERROR:{\r\n            return updateObject(state, {\r\n                error: true,\r\n                errMsg: action.payload.msg\r\n            });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport SquareValue from '../../utility/squareObj';\r\nimport Checker from '../../utility/gameChecker';\r\nimport updateObject from '../utility';\r\n\r\nconst getBlankBoard = () => {\r\n    const arr = new Array(20).fill(0);\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n        arr[i] = new Array(20);\r\n        for (let j = 0; j < arr[i].length; j += 1) {\r\n            arr[i][j] = new SquareValue(0, i * 10 * 2 + j, i, j);\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nconst initialState = {\r\n    boardSquares: getBlankBoard(),\r\n    turn: false,\r\n    player: 1,\r\n    win: false,\r\n    history: [],\r\n    currentStep: 0\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // case actionTypes.ADD_HISTORY:\r\n        //     return updateObject(state, { counter: state.counter - 1 })\r\n        // case actionTypes.CHOSE_POSITION: {\r\n        //     const { boardSquares } = state;\r\n        //     let newState = {};\r\n        //     const { square } = action;\r\n        //     const squaresBoard = boardSquares.map((squareRow) => {\r\n        //         squareRow.map(squareM => {\r\n        //             const s = squareM;\r\n        //             s.isSelected = false;\r\n        //             if (squareM.equal(square)) {\r\n        //                 // console.log('map', squareM);\r\n        //                 if (s.value === 0) {\r\n        //                     const { player, currentStep, history } = state;\r\n        //                     s.value = player;\r\n        //                     s.select();\r\n        //                     //\r\n        //                     const result = Checker.check(square, boardSquares);\r\n\r\n        //                     if (result.length > 0) {\r\n        //                         const newBoard = boardSquares.map(sr1 => {\r\n        //                             sr1.map(square1 => {\r\n        //                                 const sq = square1;\r\n        //                                 sq.isSelected = false;\r\n        //                                 result.forEach(r => {\r\n        //                                     if (sq.equal(r)) {\r\n        //                                         sq.select();\r\n        //                                     }\r\n        //                                 })\r\n        //                                 return sq;\r\n        //                             })\r\n        //                             return sr1;\r\n\r\n        //                         })\r\n        //                         newState = {\r\n        //                             win: true,\r\n        //                             boardSquares: newBoard\r\n        //                         }\r\n        //                     }\r\n\r\n        //                     //\r\n        //                     let newHis = [];\r\n        //                     if (currentStep < history.length) {\r\n        //                         newHis = history.slice(0, currentStep)\r\n        //                     } else {\r\n        //                         newHis = [...history]\r\n        //                     }\r\n        //                     newState = {\r\n        //                         ...newState,\r\n        //                         history: [...newHis, {\r\n        //                             location: square.key,\r\n        //                             player\r\n        //                         }],\r\n        //                         player: player === 1 ? 2 : 1,\r\n        //                         currentStep: currentStep + 1,\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //             return s;\r\n        //         })\r\n        //         return squareRow;\r\n        //     })\r\n        //     return updateObject(state, { ...newState, boardSquares: squaresBoard });\r\n        // }\r\n\r\n        // case actionTypes.INIT_GAME: {\r\n        //     const boardSquares = getBlankBoard();\r\n        //     return updateObject(state, {\r\n        //         boardSquares,\r\n        //         player: 1,\r\n        //         win: false,\r\n        //         history: []\r\n        //     });\r\n        // }\r\n        // case actionTypes.SET_STEP: {\r\n        //     // console.log('Set step');\r\n        //     const newBoardHistory = getBlankBoard();\r\n        //     const { history } = state;\r\n        //     for (let i = 0; i < action.step -1; i += 1) {\r\n        //         const lo = history[i].location;\r\n        //         newBoardHistory.map(boardRow => {\r\n        //             boardRow.map(square => {\r\n        //                 const newSquare = square;\r\n        //                 newSquare.isSelected = false;\r\n        //                 if (newSquare.key === lo) {\r\n        //                     newSquare.value = history[i].player;\r\n        //                     newSquare.select();\r\n        //                 }\r\n        //                 return newSquare;\r\n        //             })\r\n        //             return boardRow;\r\n        //         })\r\n        //     }\r\n        //     let player = 1;\r\n        //     if (action.step !== 0) {\r\n        //         player = history[action.step - 1].player === 1 ? 2 : 1;\r\n        //     }\r\n        //     return updateObject(state, {\r\n        //         boardSquares: newBoardHistory,\r\n        //         player,\r\n        //         currentStep: action.step\r\n        //     });\r\n        // }\r\n        // case actionTypes.Turn:{\r\n        //     return updateObject(state, {\r\n        //         turn:true\r\n        //     });\r\n        // }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport gameReducer from './store/reducers/gameReducers';\nimport authenticaReducer from './store/reducers/authenticaReducer';\nimport onlienReduce from './store/reducers/onlineState';\n\nconst rootReducer = combineReducers({\n    grc: gameReducer,\n    auth: authenticaReducer,\n    onl: onlienReduce\n});\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst enhancer = composeEnhancers(\n    compose(applyMiddleware(thunk)),\n);\nconst store = createStore(rootReducer, enhancer);\nReactDOM.render(<Provider store={store}><BrowserRouter><App /></BrowserRouter></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}